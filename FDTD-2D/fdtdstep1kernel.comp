#version 450

/*
Data types, sizes and other constants are defined in the following header file.
Warning: if GLSL_TO_SPV_UPDATE_COMPILATION_CHECK in VulkanCompute.h is defined,
be advised that changes in HDcommon.h will NOT trigger a glsl to spv translation.
*/
#include "HDcommon.h"

layout(local_size_x_id = 1) in;                
layout(local_size_y_id = 2) in;
layout(local_size_z_id = 3) in;

layout(push_constant) uniform PushConsts {
    int t;
} pushConsts;

layout(std430) buffer;

layout(set = 0, binding = 4) buffer d_fict_
{
    DATA_TYPE elements[];
}
_fict_;

layout(set = 0, binding = 5) buffer d_ex
{
    DATA_TYPE elements[];
}
ex;

layout(set = 0, binding = 6) buffer d_ey
{
    DATA_TYPE elements[];
}
ey;

layout(set = 0, binding = 7) buffer d_hz
{
    DATA_TYPE elements[];
}
hz;


void main()
{

    const uint j = gl_LocalInvocationID.x + gl_WorkGroupID.x * gl_WorkGroupSize.x;
    const uint i = gl_LocalInvocationID.y + gl_WorkGroupID.y * gl_WorkGroupSize.y;

    int t = pushConsts.t;

	if ((i < NX) && (j < NY))
	{
		if (i == 0) 
		{
			ey.elements[i * NY + j] = _fict_.elements[t];
		}
		else
		{ 
			ey.elements[i * NY + j] = ey.elements[i * NY + j] - 0.5f*(hz.elements[i * NY + j] - hz.elements[(i-1) * NY + j]);
		}
	}

}
