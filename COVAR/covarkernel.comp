#version 450
/*
See LICENSE.md for vkpolybench and other 3rd party licenses. 
*/
/*
Data types, sizes and other constants are defined in the following header file.
Warning: if GLSL_TO_SPV_UPDATE_COMPILATION_CHECK in VulkanCompute.h is defined,
be advised that changes in HDcommon.h will NOT trigger a glsl to spv translation.
*/
#include "HDcommon.h"

layout(local_size_x_id = 1) in;                
layout(local_size_y_id = 2) in;
layout(local_size_z_id = 3) in;

layout(std430) buffer;

layout(set = 0, binding = 4) buffer d_symmat
{
    DATA_TYPE elements[];
}
symmat;

layout(set = 0, binding = 5) buffer d_data
{
    DATA_TYPE elements[];
}
data;

void main()
{

    const int j1 = int(gl_LocalInvocationID.x + gl_WorkGroupID.x * gl_WorkGroupSize.x) + 1;
	int i, j2;

	if ((j1 >= 1) && (j1 < (M+1)))
	{
		for (j2 = j1; j2 < (M+1); j2++)
		{		
			symmat.elements[j1*(M+1) + j2] = 0.0;
			for(i = 1; i < (N+1); i++)
			{
				symmat.elements[j1 * (M+1) + j2] += data.elements[i *(M+1) + j1] * data.elements[i *(M+1) + j2];
			}
			symmat.elements[j2 * (M+1) + j1] = symmat.elements[j1 * (M+1) + j2];
		}
	}

}
