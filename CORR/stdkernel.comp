#version 450

/*
Data types, sizes and other constants are defined in the following header file.
Warning: if GLSL_TO_SPV_UPDATE_COMPILATION_CHECK in VulkanCompute.h is defined,
be advised that changes in HDcommon.h will NOT trigger a glsl to spv translation.
*/
#include "HDcommon.h"

layout(local_size_x_id = 1) in;                
layout(local_size_y_id = 2) in;
layout(local_size_z_id = 3) in;

layout(std430) buffer;

layout(set = 0, binding = 4) buffer d_mean
{
    DATA_TYPE elements[];
}
mean;

layout(set = 0, binding = 5) buffer d_std
{
    DATA_TYPE elements[];
}
std;

layout(set = 0, binding = 6) buffer d_data
{
    DATA_TYPE elements[];
}
data;

void main()
{

    const uint j = gl_LocalInvocationID.x + gl_WorkGroupID.x * gl_WorkGroupSize.x + 1;

	if ((j >= 1) && (j < (M+1)))
	{
		std.elements[j] = 0.0;

		int i;
		for(i = 1; i < (N+1); i++)
		{
			std.elements[j] += (data.elements[i*(M+1) + j] - mean.elements[j]) * (data.elements[i*(M+1) + j] - mean.elements[j]);
		}
		std.elements[j] /= (FLOAT_N);
		std.elements[j] = sqrt(std.elements[j]);
		if(std.elements[j] <= EPS) 
		{
			std.elements[j] = 1.0;
		}
	}
}