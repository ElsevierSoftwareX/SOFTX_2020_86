#version 450
/*
See LICENSE.md for vkpolybench and other 3rd party licenses. 
*/
/*
Data types, sizes and other constants are defined in the following header file.
Warning: if GLSL_TO_SPV_UPDATE_COMPILATION_CHECK in VulkanCompute.h is defined,
be advised that changes in HDcommon.h will NOT trigger a glsl to spv translation.
*/
#include "HDcommon.h"

layout(local_size_x_id = 1) in;                
layout(local_size_y_id = 2) in;
layout(local_size_z_id = 3) in;

layout(std430) buffer;

layout(set = 0, binding = 4) buffer d_A
{
    DATA_TYPE elements[];
}
A;

layout(set = 0, binding = 5) buffer d_p
{
    DATA_TYPE elements[];
}
p;

layout(set = 0, binding = 6) buffer d_q
{
    DATA_TYPE elements[];
}
q;

//Distributed (split) from initial loop to allow parallelism
void main()
{

    const uint i = gl_LocalInvocationID.x + gl_WorkGroupID.x * gl_WorkGroupSize.x;

	if (i < NX)
	{
		q.elements[i] = 0.0f;

		int j;
		for(j=0; j < NY; j++)
		{
			q.elements[i] += A.elements[i * NY + j] * p.elements[j];
		}
	}

}
