#version 450

/*
Data types, sizes and other constants are defined in the following header file.
Warning: if GLSL_TO_SPV_UPDATE_COMPILATION_CHECK in VulkanCompute.h is defined,
be advised that changes in HDcommon.h will NOT trigger a glsl to spv translation.
*/
#include "HDcommon.h"

layout(local_size_x_id = 1) in;                
layout(local_size_y_id = 2) in;
layout(local_size_z_id = 3) in;

layout(std430) buffer;

layout(set = 0, binding = 4) buffer d_a
{
    DATA_TYPE elements[];
}
a;

layout(set = 0, binding = 5) buffer d_b
{
    DATA_TYPE elements[];
}
b;

layout(set = 0, binding = 6) buffer d_c
{
    DATA_TYPE elements[];
}
c;

void main()
{

    const uint j = gl_LocalInvocationID.x + gl_WorkGroupID.x * gl_WorkGroupSize.x;
    const uint i = gl_LocalInvocationID.y + gl_WorkGroupID.y * gl_WorkGroupSize.y;

	if ((i < NI) && (j < NJ))
	{	
		c.elements[i * NJ + j] *= BETA;
		int k;
		for(k=0; k < NK; k++)
		{
			c.elements[i * NJ + j] += ALPHA * a.elements[i * NK + k] * b.elements[k * NJ +j];
		}
	}

}
